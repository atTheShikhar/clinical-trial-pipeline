name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint Python and SQL files
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 sqlfluff

      - name: Lint Python files with flake8
        run: |
          echo "Running flake8..."
          flake8 api dataloader etl \
            --count --select=E9,F63,F7,F82 --show-source --statistics
          echo "No python linting issue found."

      - name: Lint SQL files with sqlfluff
        run: |
          echo "Running sqlfluff..."
          sqlfluff lint etl
          echo "No SQL linting issue found."

  terraform:
    name: Terraform Fmt, Validate, Plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra

    env:
      TF_VAR_mysql_user: "${{ secrets.MYSQL_USER }}"
      TF_VAR_mysql_pass: "${{ secrets.MYSQL_PASS }}"
      TF_VAR_mysql_host: "${{ secrets.MYSQL_HOST }}"
      TF_VAR_mysql_db: "${{ secrets.MYSQL_DB }}"
      TF_VAR_storage_bucket: "${{ secrets.STORAGE_BUCKET }}"
      TF_VAR_storage_access_id: "${{ secrets.STORAGE_ACCESS_ID }}"
      TF_VAR_storage_secret: "${{ secrets.STORAGE_SECRET }}"
      TF_VAR_server_api_key: "${{ secrets.SERVER_API_KEY }}"
      TF_VAR_environment: "${{ secrets.ENVIRONMENT }}"
      TF_VAR_gcr_image_hash: "${{ secrets.GCR_IMAGE_HASH }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Authenticate to GCP
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan
